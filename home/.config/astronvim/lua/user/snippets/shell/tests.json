{
  "test_string_empty": {
    "prefix": "test_string_empty",
    "body": "test -z \"$${0:VAR}\"",
    "description": "A test to check the lengh of VAR is zero (i.e. it is empty) and returns TRUE if so."
  },
  "test_string_equal": {
    "prefix": "test_string_equal",
    "body": "test \"$${0:VAR1}\" = \"$${1:VAR2}\"",
    "description": "A test to compare two different STRINGS and returns TRUE if they are of equal value."
  },
  "test_string_not_empty": {
    "prefix": "test_string_not_empty",
    "body": "test -n \"$${0:VAR}\"",
    "description": "A test that checks the length of a STRING is greater than zero and returns TRUE if so."
  },
  "test_string_not_equal": {
    "prefix": "test_string_not_equal",
    "body": "test \"$${0:VAR1}\" != \"$${1:VAR2}\"",
    "description": "A test to compare two different STRINGS.  Returns TRUE if they are NOT of equal value."
  },
  "test_int_equal": {
    "prefix": "test_int_equal",
    "body": "test \"$${0:VAR1}\" -eq \"$${1:VAR2}\"",
    "description": "A test to compare two different INTEGERS.  Returns TRUE if they are of equal value."
  },
  "test_int_great_equal": {
    "prefix": "test_int_great_equal",
    "body": "test \"$${0:VAR1}\" -ge \"$${1:VAR2}\"",
    "description": "A test to compare two different INTEGERS.  Returns TRUE if INTEGER1 is of equal or greater value than INTEGER2."
  },
  "test_int_great_than": {
    "prefix": "test_int_great_than",
    "body": "test \"$${0:VAR1}\" -gt \"$${1:VAR2}\"",
    "description": "A test to compare two different INTEGERS.  Returns TRUE if INTEGER1 is greater than INTEGER2 in value."
  },
  "test_int_less_equal": {
    "prefix": "test_int_less_equal",
    "body": "test \"$${0:VAR1}\" -le \"$${1:VAR2}\"",
    "description": "A test to compare two different INTEGERS.  Returns TRUE if INTEGER1 is less than or equal to INTEGER2 in value."
  },
  "test_int_less_than": {
    "prefix": "test_int_less_than",
    "body": "test \"$${0:VAR1}\" -lt \"$${1:VAR2}\"",
    "description": "A test to compare two different INTEGERS.  Returns TRUE if INTEGER1 is less than INTEGER2 in value."
  },
  "test_int_not_equal": {
    "prefix": "test_int_not_equal",
    "body": "test \"$${0:VAR1}\" -ne \"$${1:VAR2}",
    "description": "A test to compare two different INTEGERS.  Returns TRUE if INTEGER1 is NOT equal to INTEGER2 in value."
  },
  "test_exist": {
    "prefix": "test_exist_file",
    "body": "test -e \"$${0:VAR}\"",
    "description": "A test to check if FILE exists."
  },
  "test_exist_file": {
    "prefix": "test_exist_regular_file",
    "body": "test -f \"$${0:VAR}\"",
    "description": "A test to check if FILE exists and is a regular file."
  },
  "test_exist_directory": {
    "prefix": "test_exist_directory",
    "body": "test -d \"$${0:VAR}\"",
    "description": "A test to check if a FILE exists and is a directory."
  },
  "test_exist_readable": {
    "prefix": "test_exist_readable",
    "body": "test -r \"$${0:VAR}\"",
    "description": "A test to check if FILE exists and read permission is granted."
  },
  "test_exist_writeable": {
    "prefix": "test_exist_writeable",
    "body": "test -w \"$${0:VAR}\"",
    "description": "A test to check if FILE exists and write permission is granted."
  },
  "test_exist_executable": {
    "prefix": "test_exist_executable",
    "body": "test -x \"$${0:VAR}\"",
    "description": "A test to check if FILE exists and execute (or search) permission is granted."
  },
  "test_exist_link": {
    "prefix": "test_exist_link",
    "body": "test -h \"$${0:VAR}\"",
    "description": "A test to check if FILE exists and is a symbolic link (same as -L)."
  },
  "test_file_equal": {
    "prefix": "test_file_equal",
    "body": "test \"$${0:VAR}\" -ef \"$${1:VAR}\"",
    "description": "A test to check if FILE1 and FILE2 have the same device and inode numbers."
  },
  "test_file_new_than": {
    "prefix": "test_file_new_than",
    "body": "test \"$${0:VAR}\" -nt \"$${1:VAR}\"",
    "description": "A test to check if FILE1 is newer (modification date) than FILE2."
  },
  "test_file_old_than": {
    "prefix": "test_file_old_than",
    "body": "test \"$${0:VAR}\" -ot \"$${1:VAR}\"",
    "description": "A test to check if FILE1 is older than FILE2."
  }
}
